version: '2.2'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - elastic
  #logstash:
  #  build: ./logstash
  #  volumes:
  #    - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
  #    - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
  #    - ./logstash/pipeline/:/usr/share/logstash/pipeline/
  #  networks:
  #      - elastic
  mysqldb:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: changeme
    volumes:
      - ./test_db/:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    networks:
        - elastic
  phpmyadmin:
    image: phpmyadmin
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: changeme
      PMA_HOST: mysqldb
    ports:
      - 8080:80
    networks:
      - elastic
  flask-app:
    build: ./flask-app
    environment:
      - RABBITMQ_USERNAME=admin
      - RABBITMQ_PASSWORD=changeme
      - RABBITMQ_URL=rabbitmq
    ports:
      - "5000:5000"
    networks:
      - elastic
  rabbitmq:
    image: bitnami/rabbitmq:latest
    ports:
      - "4369:4369"
      - "5672:5672"
      - "25672:25672"
      - "15672:15672"
    volumes:
      - "rabbitmq_data:/bitnami"
    environment:
      - RABBITMQ_USERNAME=admin
      - RABBITMQ_PASSWORD=changeme
    networks:
        - elastic
  worker:
    build:
      context: ./flask-app
    hostname: flask-app
    entrypoint: celery
    command: -A celery_app.celery worker --loglevel=info
    environment:
      - RABBITMQ_USERNAME=admin
      - RABBITMQ_PASSWORD=changeme
      - RABBITMQ_URL=rabbitmq
    depends_on:
      - "flask-app"
      - "rabbitmq"
    networks:
        - elastic

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  elastic:
    driver: bridge